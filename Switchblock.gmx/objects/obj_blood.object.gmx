<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blood</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>landed = false;
aliveTime = random_range(10, 30);
numDrips = random_range(TILE_SIZE*0.25, TILE_SIZE*0.5);
curDrips = 0;
dripDirection = 1;
minDripTime = 2;
maxDripTime = 5;
dripTime = random_range(minDripTime, maxDripTime);
image_speed = 0;
//spray out
var angle = random_range(0, 360) * (pi/180);
var force = random_range(100, 500);
physics_apply_force(x, y, force*cos(angle), force*sin(angle));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(landed)
{
    phy_active = false;
    if(parent != noone &amp;&amp; !is_undefined(parent))
    {
        phy_position_x = parent.x + offsetX;
        phy_position_y = parent.y + offsetY;
    }
    else
    {
        instance_destroy();
    }
    //check if there is still more to drip
    if(curDrips &lt; numDrips)
    {
        dripTime -= DeltaTime();
        if(dripTime &lt;= 0)
        {
            curDrips++;
            dripTime = random_range(minDripTime, maxDripTime);
        }
    }
    //leave the object for a time before disappearing
    else if(aliveTime &gt; 0)
    {
        aliveTime -= DeltaTime();
        if(aliveTime &lt;= 0)
        {
            instance_destroy();
        }
    }
}
else
{
    if(global.topdown)
    {
        //always apply gravity
        physics_apply_force(x, y, 0, 10.0);
    }
    var hitObj = instance_place(x, y, obj_block);
    if(hitObj != noone)
    {
        landed = true;
        parent = hitObj;
        offsetX = x - parent.x;
        offsetY = y - parent.y;
        if(y &gt; parent.y)
        {
            dripDirection = -1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(landed)
{
    //draw all the drips
    var yStart = y + sprite_height;
    for(var i = 0; i &lt; curDrips; i++)
    {
        draw_sprite(sprite_index, image_index, x, yStart + (sprite_height * i));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>10</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>2,0</point>
    <point>2,2</point>
    <point>0,2</point>
  </PhysicsShapePoints>
</object>
